{"ast":null,"code":"const initialStocks = [{\n  symbol: 'PETR4',\n  name: 'Petrobras',\n  price: 32.50,\n  variation: 1.2\n}, {\n  symbol: 'VALE3',\n  name: 'Vale',\n  price: 68.90,\n  variation: -0.5\n}, {\n  symbol: 'MGLU3',\n  name: 'Magazine Luiza',\n  price: 4.15,\n  variation: 3.1\n}, {\n  symbol: 'ITUB4',\n  name: 'Itaú Unibanco',\n  price: 32.75,\n  variation: 0.8\n}, {\n  symbol: 'BBDC4',\n  name: 'Bradesco',\n  price: 15.20,\n  variation: -1.2\n}, {\n  symbol: 'BBAS3',\n  name: 'Banco do Brasil',\n  price: 56.30,\n  variation: 0.5\n}];\nexport const generateStockData = () => {\n  return initialStocks.map(stock => ({\n    ...stock\n  }));\n};\nexport const updateStockPrices = currentStocks => {\n  return currentStocks.map(stock => {\n    const randomChange = (Math.random() * 2 - 1) * 1.5;\n    const newPrice = stock.price * (1 + randomChange / 100);\n    const newVariation = stock.variation + randomChange;\n    return {\n      ...stock,\n      price: parseFloat(newPrice.toFixed(2)),\n      variation: parseFloat(newVariation.toFixed(2))\n    };\n  });\n};","map":{"version":3,"names":["initialStocks","symbol","name","price","variation","generateStockData","map","stock","updateStockPrices","currentStocks","randomChange","Math","random","newPrice","newVariation","parseFloat","toFixed"],"sources":["C:/projetos/des-web/app-example/src/utils/datatest.js"],"sourcesContent":["const initialStocks = [\n  { symbol: 'PETR4', name: 'Petrobras', price: 32.50, variation: 1.2 },\n  { symbol: 'VALE3', name: 'Vale', price: 68.90, variation: -0.5 },\n  { symbol: 'MGLU3', name: 'Magazine Luiza', price: 4.15, variation: 3.1 },\n  { symbol: 'ITUB4', name: 'Itaú Unibanco', price: 32.75, variation: 0.8 },\n  { symbol: 'BBDC4', name: 'Bradesco', price: 15.20, variation: -1.2 },\n  { symbol: 'BBAS3', name: 'Banco do Brasil', price: 56.30, variation: 0.5 },\n];\n\nexport const generateStockData = () => {\n  return initialStocks.map(stock => ({ ...stock }));\n};\n\nexport const updateStockPrices = (currentStocks) => {\n  return currentStocks.map(stock => {\n    const randomChange = (Math.random() * 2 - 1) * 1.5;\n    const newPrice = stock.price * (1 + randomChange / 100);\n    const newVariation = stock.variation + randomChange;\n    \n    return {\n      ...stock,\n      price: parseFloat(newPrice.toFixed(2)),\n      variation: parseFloat(newVariation.toFixed(2))\n    };\n  });\n};"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CACpB;EAAEC,MAAM,EAAE,OAAO;EAAEC,IAAI,EAAE,WAAW;EAAEC,KAAK,EAAE,KAAK;EAAEC,SAAS,EAAE;AAAI,CAAC,EACpE;EAAEH,MAAM,EAAE,OAAO;EAAEC,IAAI,EAAE,MAAM;EAAEC,KAAK,EAAE,KAAK;EAAEC,SAAS,EAAE,CAAC;AAAI,CAAC,EAChE;EAAEH,MAAM,EAAE,OAAO;EAAEC,IAAI,EAAE,gBAAgB;EAAEC,KAAK,EAAE,IAAI;EAAEC,SAAS,EAAE;AAAI,CAAC,EACxE;EAAEH,MAAM,EAAE,OAAO;EAAEC,IAAI,EAAE,eAAe;EAAEC,KAAK,EAAE,KAAK;EAAEC,SAAS,EAAE;AAAI,CAAC,EACxE;EAAEH,MAAM,EAAE,OAAO;EAAEC,IAAI,EAAE,UAAU;EAAEC,KAAK,EAAE,KAAK;EAAEC,SAAS,EAAE,CAAC;AAAI,CAAC,EACpE;EAAEH,MAAM,EAAE,OAAO;EAAEC,IAAI,EAAE,iBAAiB;EAAEC,KAAK,EAAE,KAAK;EAAEC,SAAS,EAAE;AAAI,CAAC,CAC3E;AAED,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EACrC,OAAOL,aAAa,CAACM,GAAG,CAACC,KAAK,KAAK;IAAE,GAAGA;EAAM,CAAC,CAAC,CAAC;AACnD,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAIC,aAAa,IAAK;EAClD,OAAOA,aAAa,CAACH,GAAG,CAACC,KAAK,IAAI;IAChC,MAAMG,YAAY,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG;IAClD,MAAMC,QAAQ,GAAGN,KAAK,CAACJ,KAAK,IAAI,CAAC,GAAGO,YAAY,GAAG,GAAG,CAAC;IACvD,MAAMI,YAAY,GAAGP,KAAK,CAACH,SAAS,GAAGM,YAAY;IAEnD,OAAO;MACL,GAAGH,KAAK;MACRJ,KAAK,EAAEY,UAAU,CAACF,QAAQ,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC;MACtCZ,SAAS,EAAEW,UAAU,CAACD,YAAY,CAACE,OAAO,CAAC,CAAC,CAAC;IAC/C,CAAC;EACH,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}