{"ast":null,"code":"var _jsxFileName = \"C:\\\\projetos\\\\des-web\\\\app-example\\\\src\\\\components\\\\chart\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { createChart, CrosshairMode } from 'lightweight-charts';\nimport { ChartContainer } from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CandleChart = ({\n  symbol,\n  currentPrice\n}) => {\n  _s();\n  const chartContainerRef = useRef();\n  const chartRef = useRef();\n  const candleSeriesRef = useRef();\n  useEffect(() => {\n    // Inicializa o gráfico\n    chartRef.current = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth,\n      height: 400,\n      layout: {\n        backgroundColor: '#2a2a2e',\n        textColor: '#c8a971'\n      },\n      grid: {\n        vertLines: {\n          color: '#3e3d42'\n        },\n        horzLines: {\n          color: '#3e3d42'\n        }\n      },\n      crosshair: {\n        mode: CrosshairMode.Normal\n      }\n    });\n    candleSeriesRef.current = chartRef.current.addCandlestickSeries({\n      upColor: '#00B746',\n      downColor: '#EF403C',\n      borderVisible: false,\n      wickUpColor: '#00B746',\n      wickDownColor: '#EF403C'\n    });\n\n    // Dados de exemplo - substitua por dados reais da sua API\n    const sampleData = [{\n      time: '2023-01-01',\n      open: 30,\n      high: 35,\n      low: 28,\n      close: 32\n    }, {\n      time: '2023-01-02',\n      open: 32,\n      high: 34,\n      low: 30,\n      close: 33\n    }, {\n      time: '2023-01-03',\n      open: 33,\n      high: 33,\n      low: 29,\n      close: 30\n    }, {\n      time: '2023-01-04',\n      open: 30,\n      high: 32,\n      low: 28,\n      close: 31\n    }, {\n      time: '2023-01-05',\n      open: 31,\n      high: 36,\n      low: 31,\n      close: 35\n    }];\n    candleSeriesRef.current.setData(sampleData);\n    const handleResize = () => {\n      chartRef.current.applyOptions({\n        width: chartContainerRef.current.clientWidth\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      chartRef.current.remove();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [symbol, \" - Gr\\xE1fico de Candlestick\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chartContainerRef,\n      className: \"chart-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-price\",\n      children: [\"Pre\\xE7o atual: R$ \", currentPrice]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(CandleChart, \"kRmTfj0TweYoTwAdvyASpdPc6pQ=\");\n_c = CandleChart;\nexport default CandleChart;\nvar _c;\n$RefreshReg$(_c, \"CandleChart\");","map":{"version":3,"names":["React","useEffect","useRef","createChart","CrosshairMode","ChartContainer","jsxDEV","_jsxDEV","CandleChart","symbol","currentPrice","_s","chartContainerRef","chartRef","candleSeriesRef","current","width","clientWidth","height","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","crosshair","mode","Normal","addCandlestickSeries","upColor","downColor","borderVisible","wickUpColor","wickDownColor","sampleData","time","open","high","low","close","setData","handleResize","applyOptions","window","addEventListener","removeEventListener","remove","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","className","_c","$RefreshReg$"],"sources":["C:/projetos/des-web/app-example/src/components/chart/index.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { createChart, CrosshairMode } from 'lightweight-charts';\r\nimport { ChartContainer } from './style';\r\n\r\nconst CandleChart = ({ symbol, currentPrice }) => {\r\n    const chartContainerRef = useRef();\r\n    const chartRef = useRef();\r\n    const candleSeriesRef = useRef();\r\n\r\n    useEffect(() => {\r\n        // Inicializa o gráfico\r\n        chartRef.current = createChart(chartContainerRef.current, {\r\n            width: chartContainerRef.current.clientWidth,\r\n            height: 400,\r\n            layout: {\r\n                backgroundColor: '#2a2a2e',\r\n                textColor: '#c8a971',\r\n            },\r\n            grid: {\r\n                vertLines: {\r\n                    color: '#3e3d42',\r\n                },\r\n                horzLines: {\r\n                    color: '#3e3d42',\r\n                },\r\n            },\r\n            crosshair: {\r\n                mode: CrosshairMode.Normal,\r\n            },\r\n        });\r\n\r\n        candleSeriesRef.current = chartRef.current.addCandlestickSeries({\r\n            upColor: '#00B746',\r\n            downColor: '#EF403C',\r\n            borderVisible: false,\r\n            wickUpColor: '#00B746',\r\n            wickDownColor: '#EF403C',\r\n        });\r\n\r\n        // Dados de exemplo - substitua por dados reais da sua API\r\n        const sampleData = [\r\n            { time: '2023-01-01', open: 30, high: 35, low: 28, close: 32 },\r\n            { time: '2023-01-02', open: 32, high: 34, low: 30, close: 33 },\r\n            { time: '2023-01-03', open: 33, high: 33, low: 29, close: 30 },\r\n            { time: '2023-01-04', open: 30, high: 32, low: 28, close: 31 },\r\n            { time: '2023-01-05', open: 31, high: 36, low: 31, close: 35 },\r\n        ];\r\n\r\n        candleSeriesRef.current.setData(sampleData);\r\n\r\n        const handleResize = () => {\r\n            chartRef.current.applyOptions({ \r\n                width: chartContainerRef.current.clientWidth \r\n            });\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n            chartRef.current.remove();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <ChartContainer>\r\n            <h3>{symbol} - Gráfico de Candlestick</h3>\r\n            <div ref={chartContainerRef} className=\"chart-container\" />\r\n            <div className=\"current-price\">\r\n                Preço atual: R$ {currentPrice}\r\n            </div>\r\n        </ChartContainer>\r\n    );\r\n};\r\n\r\nexport default CandleChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}